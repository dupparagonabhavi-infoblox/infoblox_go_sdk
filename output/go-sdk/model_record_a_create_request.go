/*
A record

creating docu of wapi a record documentation

API version: 2.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the RecordACreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordACreateRequest{}

// RecordACreateRequest struct for RecordACreateRequest
type RecordACreateRequest struct {
	Name *string `json:"name,omitempty"`
	Ipv4addr *IPv4Addr `json:"ipv4addr,omitempty"`
	DdnsPrincipal *bool `json:"ddns_principal,omitempty"`
	DdnsProtected *bool `json:"ddns_protected,omitempty"`
	Comment *string `json:"comment,omitempty"`
	CreationTime *time.Time `json:"creation_time,omitempty"`
	Creator *string `json:"creator,omitempty"`
	Disable *bool `json:"disable,omitempty"`
	Zone *string `json:"zone,omitempty"`
	View *string `json:"view,omitempty"`
	Ttl *int32 `json:"ttl,omitempty"`
	UseTtl *bool `json:"use_ttl,omitempty"`
	CloudInfo *RecordACreateRequestCloudInfo `json:"cloud_info,omitempty"`
	Extattrs *map[string]ExtensibleAttributesValue `json:"extattrs,omitempty"`
}

// NewRecordACreateRequest instantiates a new RecordACreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordACreateRequest() *RecordACreateRequest {
	this := RecordACreateRequest{}
	return &this
}

// NewRecordACreateRequestWithDefaults instantiates a new RecordACreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordACreateRequestWithDefaults() *RecordACreateRequest {
	this := RecordACreateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RecordACreateRequest) SetName(v string) {
	o.Name = &v
}

// GetIpv4addr returns the Ipv4addr field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetIpv4addr() IPv4Addr {
	if o == nil || IsNil(o.Ipv4addr) {
		var ret IPv4Addr
		return ret
	}
	return *o.Ipv4addr
}

// GetIpv4addrOk returns a tuple with the Ipv4addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetIpv4addrOk() (*IPv4Addr, bool) {
	if o == nil || IsNil(o.Ipv4addr) {
		return nil, false
	}
	return o.Ipv4addr, true
}

// HasIpv4addr returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasIpv4addr() bool {
	if o != nil && !IsNil(o.Ipv4addr) {
		return true
	}

	return false
}

// SetIpv4addr gets a reference to the given IPv4Addr and assigns it to the Ipv4addr field.
func (o *RecordACreateRequest) SetIpv4addr(v IPv4Addr) {
	o.Ipv4addr = &v
}

// GetDdnsPrincipal returns the DdnsPrincipal field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetDdnsPrincipal() bool {
	if o == nil || IsNil(o.DdnsPrincipal) {
		var ret bool
		return ret
	}
	return *o.DdnsPrincipal
}

// GetDdnsPrincipalOk returns a tuple with the DdnsPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetDdnsPrincipalOk() (*bool, bool) {
	if o == nil || IsNil(o.DdnsPrincipal) {
		return nil, false
	}
	return o.DdnsPrincipal, true
}

// HasDdnsPrincipal returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasDdnsPrincipal() bool {
	if o != nil && !IsNil(o.DdnsPrincipal) {
		return true
	}

	return false
}

// SetDdnsPrincipal gets a reference to the given bool and assigns it to the DdnsPrincipal field.
func (o *RecordACreateRequest) SetDdnsPrincipal(v bool) {
	o.DdnsPrincipal = &v
}

// GetDdnsProtected returns the DdnsProtected field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetDdnsProtected() bool {
	if o == nil || IsNil(o.DdnsProtected) {
		var ret bool
		return ret
	}
	return *o.DdnsProtected
}

// GetDdnsProtectedOk returns a tuple with the DdnsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetDdnsProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.DdnsProtected) {
		return nil, false
	}
	return o.DdnsProtected, true
}

// HasDdnsProtected returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasDdnsProtected() bool {
	if o != nil && !IsNil(o.DdnsProtected) {
		return true
	}

	return false
}

// SetDdnsProtected gets a reference to the given bool and assigns it to the DdnsProtected field.
func (o *RecordACreateRequest) SetDdnsProtected(v bool) {
	o.DdnsProtected = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *RecordACreateRequest) SetComment(v string) {
	o.Comment = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *RecordACreateRequest) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *RecordACreateRequest) SetCreator(v string) {
	o.Creator = &v
}

// GetDisable returns the Disable field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetDisable() bool {
	if o == nil || IsNil(o.Disable) {
		var ret bool
		return ret
	}
	return *o.Disable
}

// GetDisableOk returns a tuple with the Disable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.Disable) {
		return nil, false
	}
	return o.Disable, true
}

// HasDisable returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasDisable() bool {
	if o != nil && !IsNil(o.Disable) {
		return true
	}

	return false
}

// SetDisable gets a reference to the given bool and assigns it to the Disable field.
func (o *RecordACreateRequest) SetDisable(v bool) {
	o.Disable = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *RecordACreateRequest) SetZone(v string) {
	o.Zone = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetView() string {
	if o == nil || IsNil(o.View) {
		var ret string
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetViewOk() (*string, bool) {
	if o == nil || IsNil(o.View) {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasView() bool {
	if o != nil && !IsNil(o.View) {
		return true
	}

	return false
}

// SetView gets a reference to the given string and assigns it to the View field.
func (o *RecordACreateRequest) SetView(v string) {
	o.View = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl) {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *RecordACreateRequest) SetTtl(v int32) {
	o.Ttl = &v
}

// GetUseTtl returns the UseTtl field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetUseTtl() bool {
	if o == nil || IsNil(o.UseTtl) {
		var ret bool
		return ret
	}
	return *o.UseTtl
}

// GetUseTtlOk returns a tuple with the UseTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetUseTtlOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTtl) {
		return nil, false
	}
	return o.UseTtl, true
}

// HasUseTtl returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasUseTtl() bool {
	if o != nil && !IsNil(o.UseTtl) {
		return true
	}

	return false
}

// SetUseTtl gets a reference to the given bool and assigns it to the UseTtl field.
func (o *RecordACreateRequest) SetUseTtl(v bool) {
	o.UseTtl = &v
}

// GetCloudInfo returns the CloudInfo field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetCloudInfo() RecordACreateRequestCloudInfo {
	if o == nil || IsNil(o.CloudInfo) {
		var ret RecordACreateRequestCloudInfo
		return ret
	}
	return *o.CloudInfo
}

// GetCloudInfoOk returns a tuple with the CloudInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetCloudInfoOk() (*RecordACreateRequestCloudInfo, bool) {
	if o == nil || IsNil(o.CloudInfo) {
		return nil, false
	}
	return o.CloudInfo, true
}

// HasCloudInfo returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasCloudInfo() bool {
	if o != nil && !IsNil(o.CloudInfo) {
		return true
	}

	return false
}

// SetCloudInfo gets a reference to the given RecordACreateRequestCloudInfo and assigns it to the CloudInfo field.
func (o *RecordACreateRequest) SetCloudInfo(v RecordACreateRequestCloudInfo) {
	o.CloudInfo = &v
}

// GetExtattrs returns the Extattrs field value if set, zero value otherwise.
func (o *RecordACreateRequest) GetExtattrs() map[string]ExtensibleAttributesValue {
	if o == nil || IsNil(o.Extattrs) {
		var ret map[string]ExtensibleAttributesValue
		return ret
	}
	return *o.Extattrs
}

// GetExtattrsOk returns a tuple with the Extattrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequest) GetExtattrsOk() (*map[string]ExtensibleAttributesValue, bool) {
	if o == nil || IsNil(o.Extattrs) {
		return nil, false
	}
	return o.Extattrs, true
}

// HasExtattrs returns a boolean if a field has been set.
func (o *RecordACreateRequest) HasExtattrs() bool {
	if o != nil && !IsNil(o.Extattrs) {
		return true
	}

	return false
}

// SetExtattrs gets a reference to the given map[string]ExtensibleAttributesValue and assigns it to the Extattrs field.
func (o *RecordACreateRequest) SetExtattrs(v map[string]ExtensibleAttributesValue) {
	o.Extattrs = &v
}

func (o RecordACreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordACreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Ipv4addr) {
		toSerialize["ipv4addr"] = o.Ipv4addr
	}
	if !IsNil(o.DdnsPrincipal) {
		toSerialize["ddns_principal"] = o.DdnsPrincipal
	}
	if !IsNil(o.DdnsProtected) {
		toSerialize["ddns_protected"] = o.DdnsProtected
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creation_time"] = o.CreationTime
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Disable) {
		toSerialize["disable"] = o.Disable
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.View) {
		toSerialize["view"] = o.View
	}
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	if !IsNil(o.UseTtl) {
		toSerialize["use_ttl"] = o.UseTtl
	}
	if !IsNil(o.CloudInfo) {
		toSerialize["cloud_info"] = o.CloudInfo
	}
	if !IsNil(o.Extattrs) {
		toSerialize["extattrs"] = o.Extattrs
	}
	return toSerialize, nil
}

type NullableRecordACreateRequest struct {
	value *RecordACreateRequest
	isSet bool
}

func (v NullableRecordACreateRequest) Get() *RecordACreateRequest {
	return v.value
}

func (v *NullableRecordACreateRequest) Set(val *RecordACreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordACreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordACreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordACreateRequest(val *RecordACreateRequest) *NullableRecordACreateRequest {
	return &NullableRecordACreateRequest{value: val, isSet: true}
}

func (v NullableRecordACreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordACreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


