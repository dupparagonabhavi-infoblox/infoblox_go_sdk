/*
A record

creating docu of wapi a record documentation

API version: 2.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecordACreateRequestCloudInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordACreateRequestCloudInfo{}

// RecordACreateRequestCloudInfo struct for RecordACreateRequestCloudInfo
type RecordACreateRequestCloudInfo struct {
	AuthorityType *string `json:"authority_type,omitempty"`
	DelegatedMember *RecordACreateRequestCloudInfoDelegatedMember `json:"delegated_member,omitempty"`
	DelegatedRoot *string `json:"delegated_root,omitempty"`
	DelegatedScope *string `json:"delegated_scope,omitempty"`
	MgmtPlatform *string `json:"mgmt_platform,omitempty"`
	OwnedByAdaptor *bool `json:"owned_by_adaptor,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
	Usage *string `json:"usage,omitempty"`
}

// NewRecordACreateRequestCloudInfo instantiates a new RecordACreateRequestCloudInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordACreateRequestCloudInfo() *RecordACreateRequestCloudInfo {
	this := RecordACreateRequestCloudInfo{}
	return &this
}

// NewRecordACreateRequestCloudInfoWithDefaults instantiates a new RecordACreateRequestCloudInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordACreateRequestCloudInfoWithDefaults() *RecordACreateRequestCloudInfo {
	this := RecordACreateRequestCloudInfo{}
	return &this
}

// GetAuthorityType returns the AuthorityType field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetAuthorityType() string {
	if o == nil || IsNil(o.AuthorityType) {
		var ret string
		return ret
	}
	return *o.AuthorityType
}

// GetAuthorityTypeOk returns a tuple with the AuthorityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetAuthorityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorityType) {
		return nil, false
	}
	return o.AuthorityType, true
}

// HasAuthorityType returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasAuthorityType() bool {
	if o != nil && !IsNil(o.AuthorityType) {
		return true
	}

	return false
}

// SetAuthorityType gets a reference to the given string and assigns it to the AuthorityType field.
func (o *RecordACreateRequestCloudInfo) SetAuthorityType(v string) {
	o.AuthorityType = &v
}

// GetDelegatedMember returns the DelegatedMember field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetDelegatedMember() RecordACreateRequestCloudInfoDelegatedMember {
	if o == nil || IsNil(o.DelegatedMember) {
		var ret RecordACreateRequestCloudInfoDelegatedMember
		return ret
	}
	return *o.DelegatedMember
}

// GetDelegatedMemberOk returns a tuple with the DelegatedMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetDelegatedMemberOk() (*RecordACreateRequestCloudInfoDelegatedMember, bool) {
	if o == nil || IsNil(o.DelegatedMember) {
		return nil, false
	}
	return o.DelegatedMember, true
}

// HasDelegatedMember returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasDelegatedMember() bool {
	if o != nil && !IsNil(o.DelegatedMember) {
		return true
	}

	return false
}

// SetDelegatedMember gets a reference to the given RecordACreateRequestCloudInfoDelegatedMember and assigns it to the DelegatedMember field.
func (o *RecordACreateRequestCloudInfo) SetDelegatedMember(v RecordACreateRequestCloudInfoDelegatedMember) {
	o.DelegatedMember = &v
}

// GetDelegatedRoot returns the DelegatedRoot field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetDelegatedRoot() string {
	if o == nil || IsNil(o.DelegatedRoot) {
		var ret string
		return ret
	}
	return *o.DelegatedRoot
}

// GetDelegatedRootOk returns a tuple with the DelegatedRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetDelegatedRootOk() (*string, bool) {
	if o == nil || IsNil(o.DelegatedRoot) {
		return nil, false
	}
	return o.DelegatedRoot, true
}

// HasDelegatedRoot returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasDelegatedRoot() bool {
	if o != nil && !IsNil(o.DelegatedRoot) {
		return true
	}

	return false
}

// SetDelegatedRoot gets a reference to the given string and assigns it to the DelegatedRoot field.
func (o *RecordACreateRequestCloudInfo) SetDelegatedRoot(v string) {
	o.DelegatedRoot = &v
}

// GetDelegatedScope returns the DelegatedScope field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetDelegatedScope() string {
	if o == nil || IsNil(o.DelegatedScope) {
		var ret string
		return ret
	}
	return *o.DelegatedScope
}

// GetDelegatedScopeOk returns a tuple with the DelegatedScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetDelegatedScopeOk() (*string, bool) {
	if o == nil || IsNil(o.DelegatedScope) {
		return nil, false
	}
	return o.DelegatedScope, true
}

// HasDelegatedScope returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasDelegatedScope() bool {
	if o != nil && !IsNil(o.DelegatedScope) {
		return true
	}

	return false
}

// SetDelegatedScope gets a reference to the given string and assigns it to the DelegatedScope field.
func (o *RecordACreateRequestCloudInfo) SetDelegatedScope(v string) {
	o.DelegatedScope = &v
}

// GetMgmtPlatform returns the MgmtPlatform field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetMgmtPlatform() string {
	if o == nil || IsNil(o.MgmtPlatform) {
		var ret string
		return ret
	}
	return *o.MgmtPlatform
}

// GetMgmtPlatformOk returns a tuple with the MgmtPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetMgmtPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.MgmtPlatform) {
		return nil, false
	}
	return o.MgmtPlatform, true
}

// HasMgmtPlatform returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasMgmtPlatform() bool {
	if o != nil && !IsNil(o.MgmtPlatform) {
		return true
	}

	return false
}

// SetMgmtPlatform gets a reference to the given string and assigns it to the MgmtPlatform field.
func (o *RecordACreateRequestCloudInfo) SetMgmtPlatform(v string) {
	o.MgmtPlatform = &v
}

// GetOwnedByAdaptor returns the OwnedByAdaptor field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetOwnedByAdaptor() bool {
	if o == nil || IsNil(o.OwnedByAdaptor) {
		var ret bool
		return ret
	}
	return *o.OwnedByAdaptor
}

// GetOwnedByAdaptorOk returns a tuple with the OwnedByAdaptor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetOwnedByAdaptorOk() (*bool, bool) {
	if o == nil || IsNil(o.OwnedByAdaptor) {
		return nil, false
	}
	return o.OwnedByAdaptor, true
}

// HasOwnedByAdaptor returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasOwnedByAdaptor() bool {
	if o != nil && !IsNil(o.OwnedByAdaptor) {
		return true
	}

	return false
}

// SetOwnedByAdaptor gets a reference to the given bool and assigns it to the OwnedByAdaptor field.
func (o *RecordACreateRequestCloudInfo) SetOwnedByAdaptor(v bool) {
	o.OwnedByAdaptor = &v
}

// GetTenant returns the Tenant field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetTenant() string {
	if o == nil || IsNil(o.Tenant) {
		var ret string
		return ret
	}
	return *o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetTenantOk() (*string, bool) {
	if o == nil || IsNil(o.Tenant) {
		return nil, false
	}
	return o.Tenant, true
}

// HasTenant returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasTenant() bool {
	if o != nil && !IsNil(o.Tenant) {
		return true
	}

	return false
}

// SetTenant gets a reference to the given string and assigns it to the Tenant field.
func (o *RecordACreateRequestCloudInfo) SetTenant(v string) {
	o.Tenant = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfo) GetUsage() string {
	if o == nil || IsNil(o.Usage) {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfo) GetUsageOk() (*string, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfo) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *RecordACreateRequestCloudInfo) SetUsage(v string) {
	o.Usage = &v
}

func (o RecordACreateRequestCloudInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordACreateRequestCloudInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorityType) {
		toSerialize["authority_type"] = o.AuthorityType
	}
	if !IsNil(o.DelegatedMember) {
		toSerialize["delegated_member"] = o.DelegatedMember
	}
	if !IsNil(o.DelegatedRoot) {
		toSerialize["delegated_root"] = o.DelegatedRoot
	}
	if !IsNil(o.DelegatedScope) {
		toSerialize["delegated_scope"] = o.DelegatedScope
	}
	if !IsNil(o.MgmtPlatform) {
		toSerialize["mgmt_platform"] = o.MgmtPlatform
	}
	if !IsNil(o.OwnedByAdaptor) {
		toSerialize["owned_by_adaptor"] = o.OwnedByAdaptor
	}
	if !IsNil(o.Tenant) {
		toSerialize["tenant"] = o.Tenant
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	return toSerialize, nil
}

type NullableRecordACreateRequestCloudInfo struct {
	value *RecordACreateRequestCloudInfo
	isSet bool
}

func (v NullableRecordACreateRequestCloudInfo) Get() *RecordACreateRequestCloudInfo {
	return v.value
}

func (v *NullableRecordACreateRequestCloudInfo) Set(val *RecordACreateRequestCloudInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordACreateRequestCloudInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordACreateRequestCloudInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordACreateRequestCloudInfo(val *RecordACreateRequestCloudInfo) *NullableRecordACreateRequestCloudInfo {
	return &NullableRecordACreateRequestCloudInfo{value: val, isSet: true}
}

func (v NullableRecordACreateRequestCloudInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordACreateRequestCloudInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


