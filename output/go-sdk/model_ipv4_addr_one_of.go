/*
A record

creating docu of wapi a record documentation

API version: 2.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IPv4AddrOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPv4AddrOneOf{}

// IPv4AddrOneOf Or provide an **object for next_available_ip** with more control.  Example: ```json {   \"_object_function\": \"next_available_ip\",   \"_parameters\": {     \"exclude\": [\"9.0.0.1\", \"9.0.0.2\"],     \"num\": 3   },   \"_result_field\": \"ips\",   \"_object\": \"network\",   \"_object_parameters\": {     \"network\": \"9.0.0.0/8\",     \"network_view\": \"default\"   } } ``` 
type IPv4AddrOneOf struct {
	ObjectFunction string `json:"_object_function"`
	Parameters IPv4AddrOneOfParameters `json:"_parameters"`
	ResultField string `json:"_result_field"`
	Object string `json:"_object"`
	ObjectParameters map[string]string `json:"_object_parameters"`
}

type _IPv4AddrOneOf IPv4AddrOneOf

// NewIPv4AddrOneOf instantiates a new IPv4AddrOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPv4AddrOneOf(objectFunction string, parameters IPv4AddrOneOfParameters, resultField string, object string, objectParameters map[string]string) *IPv4AddrOneOf {
	this := IPv4AddrOneOf{}
	this.ObjectFunction = objectFunction
	this.Parameters = parameters
	this.ResultField = resultField
	this.Object = object
	this.ObjectParameters = objectParameters
	return &this
}

// NewIPv4AddrOneOfWithDefaults instantiates a new IPv4AddrOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPv4AddrOneOfWithDefaults() *IPv4AddrOneOf {
	this := IPv4AddrOneOf{}
	return &this
}

// GetObjectFunction returns the ObjectFunction field value
func (o *IPv4AddrOneOf) GetObjectFunction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectFunction
}

// GetObjectFunctionOk returns a tuple with the ObjectFunction field value
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOf) GetObjectFunctionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectFunction, true
}

// SetObjectFunction sets field value
func (o *IPv4AddrOneOf) SetObjectFunction(v string) {
	o.ObjectFunction = v
}

// GetParameters returns the Parameters field value
func (o *IPv4AddrOneOf) GetParameters() IPv4AddrOneOfParameters {
	if o == nil {
		var ret IPv4AddrOneOfParameters
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOf) GetParametersOk() (*IPv4AddrOneOfParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameters, true
}

// SetParameters sets field value
func (o *IPv4AddrOneOf) SetParameters(v IPv4AddrOneOfParameters) {
	o.Parameters = v
}

// GetResultField returns the ResultField field value
func (o *IPv4AddrOneOf) GetResultField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResultField
}

// GetResultFieldOk returns a tuple with the ResultField field value
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOf) GetResultFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultField, true
}

// SetResultField sets field value
func (o *IPv4AddrOneOf) SetResultField(v string) {
	o.ResultField = v
}

// GetObject returns the Object field value
func (o *IPv4AddrOneOf) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOf) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *IPv4AddrOneOf) SetObject(v string) {
	o.Object = v
}

// GetObjectParameters returns the ObjectParameters field value
func (o *IPv4AddrOneOf) GetObjectParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.ObjectParameters
}

// GetObjectParametersOk returns a tuple with the ObjectParameters field value
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOf) GetObjectParametersOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectParameters, true
}

// SetObjectParameters sets field value
func (o *IPv4AddrOneOf) SetObjectParameters(v map[string]string) {
	o.ObjectParameters = v
}

func (o IPv4AddrOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPv4AddrOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["_object_function"] = o.ObjectFunction
	toSerialize["_parameters"] = o.Parameters
	toSerialize["_result_field"] = o.ResultField
	toSerialize["_object"] = o.Object
	toSerialize["_object_parameters"] = o.ObjectParameters
	return toSerialize, nil
}

func (o *IPv4AddrOneOf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"_object_function",
		"_parameters",
		"_result_field",
		"_object",
		"_object_parameters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIPv4AddrOneOf := _IPv4AddrOneOf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIPv4AddrOneOf)

	if err != nil {
		return err
	}

	*o = IPv4AddrOneOf(varIPv4AddrOneOf)

	return err
}

type NullableIPv4AddrOneOf struct {
	value *IPv4AddrOneOf
	isSet bool
}

func (v NullableIPv4AddrOneOf) Get() *IPv4AddrOneOf {
	return v.value
}

func (v *NullableIPv4AddrOneOf) Set(val *IPv4AddrOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIPv4AddrOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIPv4AddrOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPv4AddrOneOf(val *IPv4AddrOneOf) *NullableIPv4AddrOneOf {
	return &NullableIPv4AddrOneOf{value: val, isSet: true}
}

func (v NullableIPv4AddrOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPv4AddrOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


