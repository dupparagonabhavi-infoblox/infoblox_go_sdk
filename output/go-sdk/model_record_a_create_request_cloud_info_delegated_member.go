/*
A record

creating docu of wapi a record documentation

API version: 2.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RecordACreateRequestCloudInfoDelegatedMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecordACreateRequestCloudInfoDelegatedMember{}

// RecordACreateRequestCloudInfoDelegatedMember struct for RecordACreateRequestCloudInfoDelegatedMember
type RecordACreateRequestCloudInfoDelegatedMember struct {
	Ipv4addr *string `json:"ipv4addr,omitempty"`
	Ipv6addr *string `json:"ipv6addr,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewRecordACreateRequestCloudInfoDelegatedMember instantiates a new RecordACreateRequestCloudInfoDelegatedMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordACreateRequestCloudInfoDelegatedMember() *RecordACreateRequestCloudInfoDelegatedMember {
	this := RecordACreateRequestCloudInfoDelegatedMember{}
	return &this
}

// NewRecordACreateRequestCloudInfoDelegatedMemberWithDefaults instantiates a new RecordACreateRequestCloudInfoDelegatedMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordACreateRequestCloudInfoDelegatedMemberWithDefaults() *RecordACreateRequestCloudInfoDelegatedMember {
	this := RecordACreateRequestCloudInfoDelegatedMember{}
	return &this
}

// GetIpv4addr returns the Ipv4addr field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetIpv4addr() string {
	if o == nil || IsNil(o.Ipv4addr) {
		var ret string
		return ret
	}
	return *o.Ipv4addr
}

// GetIpv4addrOk returns a tuple with the Ipv4addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetIpv4addrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv4addr) {
		return nil, false
	}
	return o.Ipv4addr, true
}

// HasIpv4addr returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) HasIpv4addr() bool {
	if o != nil && !IsNil(o.Ipv4addr) {
		return true
	}

	return false
}

// SetIpv4addr gets a reference to the given string and assigns it to the Ipv4addr field.
func (o *RecordACreateRequestCloudInfoDelegatedMember) SetIpv4addr(v string) {
	o.Ipv4addr = &v
}

// GetIpv6addr returns the Ipv6addr field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetIpv6addr() string {
	if o == nil || IsNil(o.Ipv6addr) {
		var ret string
		return ret
	}
	return *o.Ipv6addr
}

// GetIpv6addrOk returns a tuple with the Ipv6addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetIpv6addrOk() (*string, bool) {
	if o == nil || IsNil(o.Ipv6addr) {
		return nil, false
	}
	return o.Ipv6addr, true
}

// HasIpv6addr returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) HasIpv6addr() bool {
	if o != nil && !IsNil(o.Ipv6addr) {
		return true
	}

	return false
}

// SetIpv6addr gets a reference to the given string and assigns it to the Ipv6addr field.
func (o *RecordACreateRequestCloudInfoDelegatedMember) SetIpv6addr(v string) {
	o.Ipv6addr = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RecordACreateRequestCloudInfoDelegatedMember) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RecordACreateRequestCloudInfoDelegatedMember) SetName(v string) {
	o.Name = &v
}

func (o RecordACreateRequestCloudInfoDelegatedMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecordACreateRequestCloudInfoDelegatedMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ipv4addr) {
		toSerialize["ipv4addr"] = o.Ipv4addr
	}
	if !IsNil(o.Ipv6addr) {
		toSerialize["ipv6addr"] = o.Ipv6addr
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableRecordACreateRequestCloudInfoDelegatedMember struct {
	value *RecordACreateRequestCloudInfoDelegatedMember
	isSet bool
}

func (v NullableRecordACreateRequestCloudInfoDelegatedMember) Get() *RecordACreateRequestCloudInfoDelegatedMember {
	return v.value
}

func (v *NullableRecordACreateRequestCloudInfoDelegatedMember) Set(val *RecordACreateRequestCloudInfoDelegatedMember) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordACreateRequestCloudInfoDelegatedMember) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordACreateRequestCloudInfoDelegatedMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordACreateRequestCloudInfoDelegatedMember(val *RecordACreateRequestCloudInfoDelegatedMember) *NullableRecordACreateRequestCloudInfoDelegatedMember {
	return &NullableRecordACreateRequestCloudInfoDelegatedMember{value: val, isSet: true}
}

func (v NullableRecordACreateRequestCloudInfoDelegatedMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordACreateRequestCloudInfoDelegatedMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


