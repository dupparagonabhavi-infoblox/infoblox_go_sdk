/*
A record

Testing DefaultAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/duppara-gonabhavi/output/go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_DefaultAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DefaultAPIService RecordAGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.DefaultAPI.RecordAGet(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService RecordAObjRefDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objRef string

		httpRes, err := apiClient.DefaultAPI.RecordAObjRefDelete(context.Background(), objRef).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService RecordAObjRefGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objRef string

		httpRes, err := apiClient.DefaultAPI.RecordAObjRefGet(context.Background(), objRef).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService RecordAObjRefPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objRef string

		httpRes, err := apiClient.DefaultAPI.RecordAObjRefPost(context.Background(), objRef).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService RecordAObjRefPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var objRef string

		httpRes, err := apiClient.DefaultAPI.RecordAObjRefPut(context.Background(), objRef).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService RecordAPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.DefaultAPI.RecordAPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
