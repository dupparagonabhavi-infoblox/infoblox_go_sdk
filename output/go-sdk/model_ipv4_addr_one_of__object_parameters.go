/*
A record

creating docu of wapi a record documentation

API version: 2.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IPv4AddrOneOfObjectParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPv4AddrOneOfObjectParameters{}

// IPv4AddrOneOfObjectParameters struct for IPv4AddrOneOfObjectParameters
type IPv4AddrOneOfObjectParameters struct {
	Network *string `json:"network,omitempty"`
	NetworkView *string `json:"network_view,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewIPv4AddrOneOfObjectParameters instantiates a new IPv4AddrOneOfObjectParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPv4AddrOneOfObjectParameters() *IPv4AddrOneOfObjectParameters {
	this := IPv4AddrOneOfObjectParameters{}
	return &this
}

// NewIPv4AddrOneOfObjectParametersWithDefaults instantiates a new IPv4AddrOneOfObjectParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPv4AddrOneOfObjectParametersWithDefaults() *IPv4AddrOneOfObjectParameters {
	this := IPv4AddrOneOfObjectParameters{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *IPv4AddrOneOfObjectParameters) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOfObjectParameters) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *IPv4AddrOneOfObjectParameters) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *IPv4AddrOneOfObjectParameters) SetNetwork(v string) {
	o.Network = &v
}

// GetNetworkView returns the NetworkView field value if set, zero value otherwise.
func (o *IPv4AddrOneOfObjectParameters) GetNetworkView() string {
	if o == nil || IsNil(o.NetworkView) {
		var ret string
		return ret
	}
	return *o.NetworkView
}

// GetNetworkViewOk returns a tuple with the NetworkView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOfObjectParameters) GetNetworkViewOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkView) {
		return nil, false
	}
	return o.NetworkView, true
}

// HasNetworkView returns a boolean if a field has been set.
func (o *IPv4AddrOneOfObjectParameters) HasNetworkView() bool {
	if o != nil && !IsNil(o.NetworkView) {
		return true
	}

	return false
}

// SetNetworkView gets a reference to the given string and assigns it to the NetworkView field.
func (o *IPv4AddrOneOfObjectParameters) SetNetworkView(v string) {
	o.NetworkView = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *IPv4AddrOneOfObjectParameters) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4AddrOneOfObjectParameters) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *IPv4AddrOneOfObjectParameters) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *IPv4AddrOneOfObjectParameters) SetComment(v string) {
	o.Comment = &v
}

func (o IPv4AddrOneOfObjectParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPv4AddrOneOfObjectParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.NetworkView) {
		toSerialize["network_view"] = o.NetworkView
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableIPv4AddrOneOfObjectParameters struct {
	value *IPv4AddrOneOfObjectParameters
	isSet bool
}

func (v NullableIPv4AddrOneOfObjectParameters) Get() *IPv4AddrOneOfObjectParameters {
	return v.value
}

func (v *NullableIPv4AddrOneOfObjectParameters) Set(val *IPv4AddrOneOfObjectParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableIPv4AddrOneOfObjectParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableIPv4AddrOneOfObjectParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPv4AddrOneOfObjectParameters(val *IPv4AddrOneOfObjectParameters) *NullableIPv4AddrOneOfObjectParameters {
	return &NullableIPv4AddrOneOfObjectParameters{value: val, isSet: true}
}

func (v NullableIPv4AddrOneOfObjectParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPv4AddrOneOfObjectParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


